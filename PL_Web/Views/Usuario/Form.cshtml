@model ML.Usuario
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string src;
    if (Model.Sexo != null)
    {
        string imgSexo = Model.Sexo == "HO" ? "usuarioMasculino.png" : "usuarioFemenino.png";
        src = Model.Imagen != null && Model.Imagen.Length > 0 ? "data:image/png;base64," + Convert.ToBase64String(Model.Imagen) : "/content/imagenes/" + imgSexo;
    }
    else
    {
        src = "/content/imagenes/usuarioMasculino.png";
    }
}
<link rel="stylesheet" href="https://code.jquery.com/ui/1.14.1/themes/base/jquery-ui.css">
<h2>Nuevo Usuario</h2>
<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="card p-4 shadow">
                <div class="text-center mb-4">
                    <img src="@src" style="width:15%" alt="Imagen Usuario" id="imagenUsuario" />
                </div>
                @using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new {
                    @enctype = "multipart/form-data"
                    ,@onsubmit = "Enviar(event)"
                }))
                {
                    @Html.HiddenFor(model => model.IdUsuario)
                    @Html.HiddenFor(model => model.Direccion.IdDireccion)
                    @Html.HiddenFor(model => model.Imagen)
                    <div class="row mb-4">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Nombre, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @placeholder = "", @onkeypress = "SoloLetras(event)" })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                            <div class="error"></div>
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.ApellidoPaterno, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", @placeholder = "", @onkeypress = "SoloLetras(event)" })
                            @Html.ValidationMessageFor(model => model.ApellidoPaterno, "", new { @class = "text-danger" })
                            <div class="error"></div>
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.ApellidoMaterno, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", @placeholder = "", @onkeypress = "SoloLetras(event)" })
                            @Html.ValidationMessageFor(model => model.ApellidoMaterno, "", new { @class = "text-danger" })
                            <div class="error"></div>
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Email, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = "", @onblur = "SoloEmail()" })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            <div class="error"></div>
                        </div>
                    </div>
                    <div class="row mb-4">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Password, new { @class = "form-label" })
                            <input type="password" id="password" class="form-control" placeholder="*********" onblur="ValidatePassword()">
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            <div class="error"></div>
                        </div>                        
                        <div class="col-md-3">
                            <label class="form-label">Confirmar Contraseña</label>
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control", @placeholder = "*********", @id = "confirmPassword", @onblur = "ValidatePasswordConfirm()" })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            <div class="error"></div>
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Telefono, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control", @placeholder = "", @id = "inptTelefono", @onblur = "ValidateTelefono('inptTelefono')" })
                            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                            <div class="error"></div>
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Celular, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.Celular, new { @class = "form-control", @placeholder = "", @id = "inptCelular", @onblur = "ValidateTelefono('inptCelular')" })
                            @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
                            <div class="error"></div>
                        </div>
                    </div>
                    <div class="row mb-4">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.FechaNacimiento, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "form-control", @id = "datepicker", @onchange = "ValidateFecha()" })
                            @Html.ValidationMessageFor(model => model.FechaNacimiento, "", new { @class = "text-danger" })
                            <div class="error"></div>
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.CURP, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.CURP, new { @class = "form-control", @placeholder = "", @id = "inptCRUP", @onblur = "ValidateCURP()" })
                            @Html.ValidationMessageFor(model => model.CURP, "", new { @class = "text-danger" })
                            <div class="error"></div>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Roles</label>
                            @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Roles, "IdRol", "Nombre"), "Seleccione un rol", new { @class = "form-select", @id = "ddlRol", @onchange = "ValidateSelect('ddlRol')" })
                            @Html.ValidationMessageFor(model => model.Rol.IdRol, "", new { @class = "text-danger" })
                            <div class="error"></div>
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.UserName, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @placeholder = "", @id = "inptUserName", @onblur = "ValidateUserName()" })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            <div class="error"></div>
                        </div>
                    </div>
                    <div class="row mb-4">
                        <div class="col-md-3">
                            <div class="form-check form-check-inline mt-1">
                                @Html.RadioButtonFor(model => model.Sexo, "HO", new { @class = "form-check-input", @onchange = "CambiarImgSexo()" })
                                @Html.Label("Hombre", new { @class = "form-check-label", @for = "inlineRadio1" })
                            </div>
                            <div class="form-check form-check-inline mt-1">
                                @Html.RadioButtonFor(model => model.Sexo, "MU", new { @class = "form-check-input", @onchange = "CambiarImgSexo()" })
                                @Html.Label("Mujer", new { @class = "form-check-label", @for = "inlineRadio1" })
                            </div>
                            <div class="error"></div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-check form-switch mt-1">
                                @Html.CheckBoxFor(model => model.Estatus, new { @class = "form-check-input", @role = "switch" })
                                @Html.LabelFor(model => model.Estatus, new { @class = "form-check-label", @for = "flexSwitchCheckDefault" })
                            </div>
                        </div>
                    </div>
                    <hr class="mb-4" />
                    <div class="row mb-4">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new { @class = "form-label" })
                            @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Estados, "IdEstado", "Nombre"), "Seleccione un estado", new { @class = "form-select", @onchange = "GetMunicipioByIdEstado(), ValidateSelect('ddlEstado')", @id = "ddlEstado" })
                            @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, "", new { @class = "text-danger" })
                            <div class="error"></div>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Municipios</label>
                            @if (Model.Direccion.Colonia.Municipio.Municipios != null && Model.Direccion.Colonia.Municipio.Municipios.Count() > 0)
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(Model.Direccion.Colonia.Municipio.Municipios, "IdMunicipio", "Nombre"), "Seleccione un Municipio", new { @class = "form-select ", @onchange = "GetColoniasByIdMunicipio(), ValidateSelect('ddlMunicipio')", @id = "ddlMunicipio" })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(String.Empty), "Seleccione un Municipio", new { @class = "form-select ", @onchange = "GetColoniasByIdMunicipio(), ValidateSelect('ddlMunicipio')", @id = "ddlMunicipio" })
                            }
                            @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, "", new { @class = "text-danger" })
                            <div class="error"></div>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Colonias</label>
                            @if (Model.Direccion.Colonia.Colonias != null && Model.Direccion.Colonia.Colonias.Count() > 0)
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(Model.Direccion.Colonia.Colonias, "IdColonia", "Nombre"), "Seleccione una colonia", new { @class = "form-select", @id = "ddlColonia", @onchange = "ValidateSelect('ddlColonia')" })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(String.Empty), "Seleccione una colonia", new { @class = "form-select", @id = "ddlColonia", @onchange = "ValidateSelect('ddlColonia')" })
                            }
                            @Html.ValidationMessageFor(model => model.Direccion.Colonia.IdColonia, "", new { @class = "text-danger" })
                            <div class="error"></div>
                        </div>
                        <div class="col-md-3 mt-1">
                            @Html.LabelFor(model => model.Direccion.Calle, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.Direccion.Calle, new { @class = "form-control w-100", @placeholder = "", @id = "inptCalle", @onblur = "ValidateAlphanumericoEspacios()" })
                            @Html.ValidationMessageFor(model => model.Direccion.Calle, "", new { @class = "text-danger" })
                            <div class="error"></div>
                        </div>
                    </div>
                    <div class="row mb-4">
                        <div class="col-md-3 mt-1">
                            @Html.LabelFor(model => model.Direccion.NumeroInterior, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.Direccion.NumeroInterior, new { @class = "form-control", @placeholder = "", @onkeypress = "SoloNumeros(event)" })
                            @Html.ValidationMessageFor(model => model.Direccion.NumeroInterior, "", new { @class = "text-danger" })
                            <div class="error"></div>
                        </div>
                        <div class="col-md-3 mt-1">
                            @Html.LabelFor(model => model.Direccion.NumeroExterior, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.Direccion.NumeroExterior, new { @class = "form-control", @placeholder = "", @onkeypress = "SoloNumeros(event)" })
                            @Html.ValidationMessageFor(model => model.Direccion.NumeroExterior, "", new { @class = "text-danger" })
                            <div class="error"></div>
                        </div>
                        <div class="col-md-6 mt-1">
                            <label for="form-label">Imagen</label>
                            <input onchange="IsImage()" id="inptImagen" name="ImagenUpload" class="form-control" type="file">
                        </div>
                    </div>
                    <div class="card-footer bg-transparent">
                        <div class="row mt-2">
                            <div class="col-6 text-start">
                                <a href="@Url.Action("GetAll", "Usuario")" class="btn btn-danger">
                                    Cancelar
                                    <i class="bi bi-x-square-fill"></i>
                                </a>
                            </div>
                            <div class="col-6 text-end">
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-floppy2-fill"></i>
                                    Guardar
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jquery")
<script src="https://code.jquery.com/ui/1.14.1/jquery-ui.js"></script>
<script>
    var urlGetMunicipiosByIdEstado = '@Url.Action("GetMunicipiosByIdEstado", "Usuario")?IdEstado='
    var urlGetColoniasByIdMunicipio = '@Url.Action("GetColoniasByIdMunicipio", "Usuario")?IdMunicipio='
</script>
<script src="~/Scripts/Espesifics/Usuario/UsuarioForm.js"></script>
